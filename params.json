{"name":"Phpclasses","tagline":"Regroupement de classes php utiles","body":"PHPClasses\r\n==========\r\n\r\nRegroupement de classes php utiles\r\n\r\n# Login #\r\nCette classe permet la création d'une page de login très simplement, avec ou sans génération de formulaire.\r\nExemple :\r\n```php\r\nsession_start();\r\nrequire(\"Login.class.php\");\r\n\r\n//On indique la table à utiliser\r\n$l = new Login(\"admin\");\r\n//$l = new Login(\"admin\", $bdd); Cas où nous sommes déjà connecté avec PDO\r\n//On indique qu'on veut utiliser le fichier de log\r\n$l->show_log_messages(true);\r\n//Connexion à la base si besoin\r\n$l->connect_db(\"localhost\", \"guidono\", \"235235\", \"peche_dir4\");\r\n\r\n//On ajoute les champs voulus (label, nom_champ, type_champ)\r\n$l->addChamp(\"Login\", \"login\", \"text\");\r\n$l->addChamp(\"Mdp\", \"mdp\", \"password\", true);\r\n\r\nif($l->login()) {\r\n    echo \"ok\";\r\n    $l->logout();\r\n} else {\r\n    $l->generer_formulaire(\"test.php\");\r\n}\r\n```\r\n\r\n# Log #\r\nCette classe permet de gérer un fichier de log\r\nExemple :\r\n```php\r\nrequire(\"Log.class.php\");\r\n\r\n$log = new Log(\"../login.log\");\r\n\r\ntry {\r\n    $this->bdd = new PDO('mysql:host='.$p_host.';dbname='.$p_base, $p_login, $p_mdp);\r\n    $this->log->add_info_log(\"Connexion à la base de donnees effectuee.\");\r\n} catch(PDOException $e) {\r\n    $this->log->add_err_log(\"Erreur lors de la connexion à la base de données.\");\r\n}\r\n\r\n$this->log->write_log();\r\n```\r\n\r\n# Fichiers #\r\nClasse permettant de gérer l'enregistrement d'un ou de plusieurs fichiers envoyés via formulaire html.\r\nDe plus, elle assure que le fichier copié aura un nom unique pour en pas entrer en conflit avec les fichiers déjà présents\r\nExemple pour 1 fichier :\r\n\r\n```php\r\n//Le % indique qu'on désire une concaténation avec le nom d'origine\r\nif($f->sauver(\"maphoto\", \"../Photos/\", \"%\".$_SESSION[\"code_session\"])) {\r\n    echo \"Fichier envoye !\";\r\n} else {\r\n    echo $f->get_erreurs();\r\n}\r\n\r\nif($f->sauver(\"maphoto2\", \"../Photos/\", \"nouveau_nom\")) {\r\n    echo \"Fichier envoye !\";\r\n} else {\r\n    echo $f->get_erreurs();\r\n}\r\n```\r\n\r\nExemple avec plusieurs fichiers (attribut 'multiple' dans le formulaire html) :\r\n```php\r\nif($f->sauver_multiple(\"fichiers\", \"../Annuaire/\", \"_\".$_POST[\"numero\"])) { //ici c'est concaténation ou rien (paramètre falcultatif)\r\n    $liste_fichiers = $f->get_files_names();\r\n    foreach($liste_fichiers as $fichier) {\r\n        //traitement avec le nom des fichiers...\r\n    }\r\n    echo \"Fichiers envoyes !\";\r\n} else {\r\n    echo $f->get_erreurs();\r\n}\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}